public class BitOperator {
    public static void main(String[] args) {
        //1) 先得到2的补码
        //=> 2 的原码 00000000 00000000 00000000 00000010
        //   2 的补码 00000000 00000000 00000000 00000010
        //2) 3的补码 3的原码 00000000 00000000 00000000 00000011
        //   3的补码 00000000 00000000 00000000 00000011
        //   00000000 00000000 00000000 00000010 & 运算后的补码
        //   运算后的原码 也就是 00000000 00000000 00000000 00000010
        //   运算结果是 2

        System.out.println(2&3);//2

        //推导 
        //1） 先得到-2的原码  10000000 00000000 00000000 00000010
        //2） -2的反码       11111111 11111111 11111111 11111101
        //3） -2的补码       11111111 11111111 11111111 11111110
        //4)  ~-2操作       00000000 00000000 00000000 00000001 => 1   
        System.out.println(~-2);//1

         //推导 
        //1） 先得到2的补码  00000000 00000000 00000000 00000010
        //2） ~2的操作      11111111 11111111 11111111 11111101 运算后的补码
        //3） 运算后的反码   11111111 11111111 11111111 11111100
        //4)  运算后的原码   10000000 00000000 00000000 00000011 => -3
        System.out.println(~2);//-3

    }
}
